start = 0. end = rowLen * colen - 1;
mid = start + (end - start ) / 2;

[mid / colLen][mid % colLen]


class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int rowLen = matrix.length, colLen = matrix[0].length;
        int start = 0, end = rowLen * colLen - 1; //covert 2d to 1d
        while(start <= end){
            int mid = start + (end - start) / 2;
            if(matrix[mid / colLen][mid % colLen] == target){
                return true;
            }else if(matrix[mid / colLen][mid % colLen] < target ){
                start = mid + 1;
            }else{
                end = mid - 1;
            }
        }
        return false;
    }
}
